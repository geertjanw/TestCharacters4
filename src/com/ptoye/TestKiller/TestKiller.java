/*
 * TestKiller.java
 *
 * Created on 01 August 2006, 22:13
 */
package com.ptoye.TestKiller;

import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import javax.swing.JFrame;
import javax.swing.UIManager;

/**
 *
 * @author PToye
 */
public class TestKiller extends javax.swing.JFrame
//        implements PartitionEventListener,
//        Printable
{

  /**
   * Version for serialisation
   */
  static final long serialVersionUID = 1L;
  static final String titleString = "Killer Su Doku v.1.2";
  private OuterPane op = null;
  private GraphicsEnvironment ge;
  private Rectangle screensize;

  /**
   * Creates new form TestKiller
   */
  public TestKiller() {
    initComponents();
    op = new OuterPane(this);
    getContentPane().add(op);

    ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
    screensize = ge.getMaximumWindowBounds();

    setSize(op.getPreferredSize());
    pack();
    validate();
  }


  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jToolBar1 = new javax.swing.JToolBar();
    btnOpen = new javax.swing.JButton();
    btnSave = new javax.swing.JButton();
    btnSaveAs = new javax.swing.JButton();
    btnPartitions = new javax.swing.JToggleButton();
    jMenuBar1 = new javax.swing.JMenuBar();
    jmFile = new javax.swing.JMenu();
    jmiNew = new javax.swing.JMenuItem();
    jmiSave = new javax.swing.JMenuItem();
    jmiSaveAs = new javax.swing.JMenuItem();
    jmiRestore = new javax.swing.JMenuItem();
    jmiRestart = new javax.swing.JMenuItem();
    jmiExit = new javax.swing.JMenuItem();
    jSeparator1 = new javax.swing.JSeparator();
    jmiPrint = new javax.swing.JMenuItem();
    jmView = new javax.swing.JMenu();
    jmiViewPart = new javax.swing.JCheckBoxMenuItem();

    FormListener formListener = new FormListener();

    setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
    setTitle(TestKiller.titleString);
    setLocationByPlatform(true);
    addWindowListener(formListener);

    jToolBar1.setRollover(true);

    btnOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ptoye/TestKiller/images/folder-open_16-new.gif"))); // NOI18N
    btnOpen.setToolTipText("Open");
    btnOpen.setFocusable(false);
    btnOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    btnOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jToolBar1.add(btnOpen);

    btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ptoye/TestKiller/images/save_16.gif"))); // NOI18N
    btnSave.setToolTipText("Save");
    btnSave.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ptoye/TestKiller/images/save_16_disabled.gif"))); // NOI18N
    btnSave.setFocusable(false);
    btnSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    btnSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jToolBar1.add(btnSave);

    btnSaveAs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ptoye/TestKiller/images/saveas_16.GIF"))); // NOI18N
    btnSaveAs.setToolTipText("Save as...");
    btnSaveAs.setFocusable(false);
    btnSaveAs.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    btnSaveAs.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jToolBar1.add(btnSaveAs);

    btnPartitions.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ptoye/TestKiller/images/ShowPartitions.gif"))); // NOI18N
    btnPartitions.setToolTipText("Shows the partitions window");
    btnPartitions.setFocusable(false);
    btnPartitions.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    btnPartitions.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jToolBar1.add(btnPartitions);

    getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

    jmFile.setText("Game");

    jmiNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
    jmiNew.setMnemonic('N');
    jmiNew.setText("New");
    jmiNew.setToolTipText("Start new game");
    jmiNew.addActionListener(formListener);
    jmFile.add(jmiNew);

    jmiSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
    jmiSave.setText("Save");
    jmiSave.setToolTipText("Save to ogirinal file");
    jmiSave.addActionListener(formListener);
    jmFile.add(jmiSave);

    jmiSaveAs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
    jmiSaveAs.setMnemonic('A');
    jmiSaveAs.setText("Save as...");
    jmiSaveAs.setToolTipText("Save to new file");
    jmiSaveAs.addActionListener(formListener);
    jmFile.add(jmiSaveAs);

    jmiRestore.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
    jmiRestore.setMnemonic('o');
    jmiRestore.setText("Open");
    jmiRestore.setToolTipText("O");
    jmiRestore.addActionListener(formListener);
    jmFile.add(jmiRestore);

    jmiRestart.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
    jmiRestart.setText("Restart");
    jmiRestart.addActionListener(formListener);
    jmFile.add(jmiRestart);

    jmiExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
    jmiExit.setMnemonic('x');
    jmiExit.setText("Exit");
    jmiExit.setToolTipText("");
    jmiExit.addActionListener(formListener);
    jmFile.add(jmiExit);
    jmFile.add(jSeparator1);

    jmiPrint.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
    jmiPrint.setText("Print");
    jmiPrint.addActionListener(formListener);
    jmFile.add(jmiPrint);

    jMenuBar1.add(jmFile);

    jmView.setText("View");

    jmiViewPart.setText("Partitions window");
    jmiViewPart.addItemListener(formListener);
    jmView.add(jmiViewPart);

    jMenuBar1.add(jmView);

    setJMenuBar(jMenuBar1);

    pack();
  }

  // Code for dispatching events from components to event handlers.

  private class FormListener implements java.awt.event.ActionListener, java.awt.event.ItemListener, java.awt.event.WindowListener {
    FormListener() {}
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      if (evt.getSource() == jmiNew) {
        TestKiller.this.jmiNewActionPerformed(evt);
      }
      else if (evt.getSource() == jmiSave) {
        TestKiller.this.jmiSaveActionPerformed(evt);
      }
      else if (evt.getSource() == jmiSaveAs) {
        TestKiller.this.jmiSaveAsActionPerformed(evt);
      }
      else if (evt.getSource() == jmiRestore) {
        TestKiller.this.jmiRestoreActionPerformed(evt);
      }
      else if (evt.getSource() == jmiRestart) {
        TestKiller.this.jmiRestartActionPerformed(evt);
      }
      else if (evt.getSource() == jmiExit) {
        TestKiller.this.jmiExitActionPerformed(evt);
      }
      else if (evt.getSource() == jmiPrint) {
        TestKiller.this.jmiPrintActionPerformed(evt);
      }
    }

    public void itemStateChanged(java.awt.event.ItemEvent evt) {
      if (evt.getSource() == jmiViewPart) {
        TestKiller.this.jmiViewPartItemStateChanged(evt);
      }
    }

    public void windowActivated(java.awt.event.WindowEvent evt) {
      if (evt.getSource() == TestKiller.this) {
        TestKiller.this.formWindowActivated(evt);
      }
    }

    public void windowClosed(java.awt.event.WindowEvent evt) {
    }

    public void windowClosing(java.awt.event.WindowEvent evt) {
      if (evt.getSource() == TestKiller.this) {
        TestKiller.this.formWindowClosing(evt);
      }
    }

    public void windowDeactivated(java.awt.event.WindowEvent evt) {
      if (evt.getSource() == TestKiller.this) {
        TestKiller.this.formWindowDeactivated(evt);
      }
    }

    public void windowDeiconified(java.awt.event.WindowEvent evt) {
      if (evt.getSource() == TestKiller.this) {
        TestKiller.this.formWindowDeiconified(evt);
      }
    }

    public void windowIconified(java.awt.event.WindowEvent evt) {
      if (evt.getSource() == TestKiller.this) {
        TestKiller.this.formWindowIconified(evt);
      }
    }

    public void windowOpened(java.awt.event.WindowEvent evt) {
    }
  }// </editor-fold>//GEN-END:initComponents

  private void jmiRestartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiRestartActionPerformed
  }//GEN-LAST:event_jmiRestartActionPerformed

  private void formWindowIconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowIconified
  }//GEN-LAST:event_formWindowIconified

  private void formWindowDeiconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeiconified
  }//GEN-LAST:event_formWindowDeiconified

  private void jmiNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiNewActionPerformed
  }//GEN-LAST:event_jmiNewActionPerformed

  private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated
  }//GEN-LAST:event_formWindowDeactivated

  private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
  }//GEN-LAST:event_formWindowActivated

  private void jmiSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSaveActionPerformed
  }//GEN-LAST:event_jmiSaveActionPerformed

  private void jmiPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiPrintActionPerformed
  }//GEN-LAST:event_jmiPrintActionPerformed

  private void jmiSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSaveAsActionPerformed
  }//GEN-LAST:event_jmiSaveAsActionPerformed


  private boolean testDirtySave() {
    return true;
  }

  private void jmiExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiExitActionPerformed
    if (testDirtySave()) {
      //    dispose();
      System.exit(0);
    }

  }//GEN-LAST:event_jmiExitActionPerformed

  private void jmiRestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiRestoreActionPerformed
  }//GEN-LAST:event_jmiRestoreActionPerformed

private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    jmiExitActionPerformed(null);
}//GEN-LAST:event_formWindowClosing

private void jmiViewPartItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jmiViewPartItemStateChanged
}//GEN-LAST:event_jmiViewPartItemStateChanged


  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {
      @Override
      public void run() {
        try {
          UIManager.setLookAndFeel(
                  UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
        }
        JFrame.setDefaultLookAndFeelDecorated(true);
        new TestKiller().setVisible(true);
      }
    });
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnOpen;
  private javax.swing.JToggleButton btnPartitions;
  private javax.swing.JButton btnSave;
  private javax.swing.JButton btnSaveAs;
  private javax.swing.JMenuBar jMenuBar1;
  private javax.swing.JSeparator jSeparator1;
  private javax.swing.JToolBar jToolBar1;
  private javax.swing.JMenu jmFile;
  private javax.swing.JMenu jmView;
  private javax.swing.JMenuItem jmiExit;
  private javax.swing.JMenuItem jmiNew;
  private javax.swing.JMenuItem jmiPrint;
  private javax.swing.JMenuItem jmiRestart;
  private javax.swing.JMenuItem jmiRestore;
  private javax.swing.JMenuItem jmiSave;
  private javax.swing.JMenuItem jmiSaveAs;
  private javax.swing.JCheckBoxMenuItem jmiViewPart;
  // End of variables declaration//GEN-END:variables

  /**
   * Called when the partitions window is iconified
   */
//  @Override
//  public void partitionWindowIconified() {
//    iconifyPartitionsWindow();
//  }
//
//  /**
//   * Called with the partitions window becomes visible
//   */
//  @Override
//  public void partitionWindowVisible() {
//    showPartitionsWindow();
//  }
}
